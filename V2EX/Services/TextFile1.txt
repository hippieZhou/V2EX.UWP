  /// <summary>
        /// 根据节点ID获取其话题
        /// </summary>
        public static void GetTopicsByNodeId(long nodeId)
        {
            var uri = HTTPS_API_URL + API_TOPIC + "?node_id" + nodeId;
        }

        /// <summary>
        /// 根据节点名获取其话题
        /// </summary>
        public static void GetTopicsByNodeName(string nodeName)
        {
            var uri = HTTPS_API_URL + API_TOPIC + "?node_name" + nodeName;
        }

        /// <summary>
        /// 根据话题ID获取其内容
        /// </summary>
        public static void GetTopicByTopicId(long topicId)
        {
            var uri = HTTPS_API_URL + API_TOPIC + "?id" + topicId;
        }

        /// <summary>
        /// 根据用户名获取其发表过的话题
        /// </summary>
        public static void GetTopicsByUsername(string userName)
        {
            var uri = HTTPS_API_URL + API_TOPIC + "?username" + userName;
        }

        /// <summary>
        /// 获取首页分类话题列表
        /// </summary>
        /// <param name="tabName"></param>
        public static async Task<IEnumerable<TopicModel>> GetTabTopicsAsync(string tabName)
        {
            var list = new List<TopicModel>();

            var url = HTTPS_BASE_URL + "/?tab=" + tabName;
            var html = await GetJsonAsync(url);
            var doc = new HtmlDocument();
            doc.LoadHtml(html);
            var nodes = doc.DocumentNode.SelectNodes(@"/html[1]/body[1]/div[2]/div[1]/div[3]/div[2]//a[@class='count_livid']");

            var ids = new List<string>();

            foreach (var item in nodes)
            {
                var attr = item.Attributes.FirstOrDefault(p => p.Name == "href");
                if (attr != null)
                {
                    var arr = attr.Value.Trim().Split('/', '#');
                    if (arr.Length > 3)
                    {
                        url = HTTPS_API_URL + API_TOPIC + "?id=" + arr[2];

                        var json = await GetJsonAsync(url);
                        if (string.IsNullOrWhiteSpace(json))
                            break;

                        var topic = JsonConvert.DeserializeObject<List<TopicModel>>(json);
                        list.AddRange(topic);
                    }
                }
            }
            return list;
        }

        public static void GetTopicsByUsernameThroughBrowser(string username, int page)
        {
            var url = string.Format("%s/member/%s/topics?p=%d", HTTPS_API_URL, username, page);
        }