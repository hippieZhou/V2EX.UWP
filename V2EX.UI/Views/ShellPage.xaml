<Page
    x:Class="V2EX.UI.Views.ShellPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:V2EX.UI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:V2EX.UI.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:V2EX.UI.ViewModels"
    DataContext="{Binding ShellViewModel, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition />
        </TransitionCollection>
    </Page.Transitions>
    <Page.Resources>
        <DataTemplate x:Key="NavigationMenuItemDataTemplate" x:DataType="vm:ShellNavigationItem">
            <Grid Width="{Binding ElementName=NavigationMenu, Path=OpenPaneLength}" Height="40">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Image
                    Width="24"
                    Height="24"
                    Source="{x:Bind Src}" />
                <TextBlock
                    Grid.Column="1"
                    Margin="12,0"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource ThemeBaseBackground}"
                    Style="{StaticResource BodyTextBlockStyle}"
                    Text="{x:Bind Label}"
                    TextTrimming="None" />
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="PointerOver">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="BorderBackground"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="BorderBackground"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <PointerDownThemeAnimation TargetName="ContentPresenter" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="DisabledStates">
                        <VisualState x:Name="Enabled" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="ContentBorder"
                                    Storyboard.TargetProperty="Opacity"
                                    To="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                    Duration="0" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <controls:HamburgerMenu
            x:Name="NavigationMenu"
            HamburgerVisibility="{x:Bind ViewModel.HamburgerMenuVisibility, Mode=TwoWay}"
            IsPaneOpen="{x:Bind ViewModel.IsPaneOpen, Mode=TwoWay}"
            ItemTemplate="{StaticResource NavigationMenuItemDataTemplate}"
            ItemsSource="{x:Bind ViewModel.PrimaryItems, Mode=OneWay}"
            OpenPaneLength="240"
            OptionsItemTemplate="{StaticResource NavigationMenuItemDataTemplate}"
            OptionsItemsSource="{x:Bind ViewModel.SecondaryItems}"
            PaneBackground="{StaticResource ThemeBaseBackground}"
            PaneForeground="White">
            <controls:HamburgerMenu.Header>
                <Grid Height="240" Background="{StaticResource ThemeBaseBackground}" />
            </controls:HamburgerMenu.Header>
            <i:Interaction.Behaviors>
                <ic:EventTriggerBehavior EventName="ItemClick">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.ItemSelectedCommand}" />
                </ic:EventTriggerBehavior>
                <ic:EventTriggerBehavior EventName="OptionsItemClick">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.ItemSelectedCommand}" />
                </ic:EventTriggerBehavior>
            </i:Interaction.Behaviors>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="72" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Background="{StaticResource ThemeBaseBackground}" />
                <local:BlankControl Grid.Row="1" />
                <ContentControl
                    Grid.Row="1"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    Content="{x:Bind ViewModel.ShellContent, Mode=OneWay}" />
            </Grid>
        </controls:HamburgerMenu>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource TableWindowWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NavigationMenu.DisplayMode" Value="Inline" />
                        <Setter Target="NavigationMenu.IsPaneOpen" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NavigationMenu.DisplayMode" Value="Overlay" />
                        <Setter Target="NavigationMenu.IsPaneOpen" Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
